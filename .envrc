#### GENERAL SETUP ####
export PROJECT_ROOT=$(git rev-parse --show-toplevel)

# Source and watch the .env file:
dotenv
watch_file .env

#### LOAD NIX ENVIRONMENT ####

# Allow unfree packages (for closed-source VS Code extensions):
export NIXPKGS_ALLOW_UNFREE=1

# Disable Boehm garbage collection on Macs to prevent seg-fault
if [[ "$(uname)" == "Darwin" ]]; then
  export GC_DONT_GC=1
fi

# https://github.com/nix-community/nix-direnv A fast, persistent use_nix/use_flake implementation for direnv:
if ! has nix_direnv_version || ! nix_direnv_version 2.3.0; then
  source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.3.0/direnvrc" "sha256-Dmd+j63L84wuzgyjITIfSxSD57Tx7v51DMxVZOsiUD8="
fi

# Load the Nix environment from # https://github.com/input-output-hk/devx Slightly opinionated shared GitHub Action for Cardano-Haskell projects
if use flake "github:input-output-hk/devx?rev=2655e6c45e126fa0a7511a1eeae74006a26faf1f#ghc96-iog-full"; then
  export RAFFLEIZE_ENV_LOADED=true

  # Build cabal project locally
  export CABAL_DIR="$PROJECT_ROOT/.cabal"

  # Create symlink to Nix HLS binary (prevents conflict with GHCup binaries)
  just link-hls

else
  echo "Error loading raffleize environment !"
  exit 1
fi